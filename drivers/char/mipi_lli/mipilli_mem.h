/*
 * mipilli_mem.h F_MIPILLI_LP Controller Driver
 * Copyright (C) 2013 Fujitsu Semi, Ltd
 * Author: Slash Huang <slash.huang@tw.fujitsu.com>
 *
 *   This code is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This code is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
#ifndef MIPILLI_MEM_H_
#define MIPILLI_MEM_H_

#define LLI_REG_BASE 0

/*
 * Remote LLI Attributes
 * Local LLI Attributes must OR 0x00008000!!
 */

/*
 * Registers are classified by usages:
 * (O) Read-Only register/field,
 * (P) Parameter, that can be written in any time unless prohibited,
 * (C) Control, requires specific sequence to use.
 * (OD) Read-Only for debug. ToDo should not be disclosed to users.
 * (PD) Parameter for debug. ToDo should not be disclosed to users.
 * (CD) Control for debug. ToDo should not be disclosed to users.
 *
 * Register/fields marked (P) is controlled by 'config' structure.
 */

/*
 * M-PHY Lane0 attributes
 * Lane1 to Lane15 must have address incremented by (Lane#*0x0400).
 * All attributes are byte size.
 * SVC available, PLU required for update.
 */
/* Ref M-PHY specification .pdf  Table 48 */
#define MIPI_MPHY0_TXHSMODE_CAP     (LLI_REG_BASE + (0x01<<2))
#define MIPI_MPHY0_TXHSGEAR_CAP     (LLI_REG_BASE + (0x02<<2))
#define MIPI_MPHY0_TXPWMG0_CAP      (LLI_REG_BASE + (0x03<<2))
#define MIPI_MPHY0_TXPWMGEAR_CAP    (LLI_REG_BASE + (0x04<<2))
#define MIPI_MPHY0_TXAMPLITUDE_CAP  (LLI_REG_BASE + (0x05<<2))
#define MIPI_MPHY0_TXEXTSYNC_CAP    (LLI_REG_BASE + (0x06<<2))
#define MIPI_MPHY0_TXHSUNTERM_CAP   (LLI_REG_BASE + (0x07<<2))
#define MIPI_MPHY0_TXTERM_CAP       (LLI_REG_BASE + (0x08<<2))
#define MIPI_MPHY0_TXMINSLEEP_CAP   (LLI_REG_BASE + (0x09<<2))
#define MIPI_MPHY0_TXMINSTALL_CAP   (LLI_REG_BASE + (0x0a<<2))
#define MIPI_MPHY0_TXMINSAVECNF_CAP (LLI_REG_BASE + (0x0b<<2))
#define MIPI_MPHY0_TXCLKSHARED_CAP  (LLI_REG_BASE + (0x0c<<2))
#define MIPI_MPHY0_TXRELEASE_CAP    (LLI_REG_BASE + (0x0d<<2))
#define MIPI_MPHY0_TXEDITION_CAP    (LLI_REG_BASE + (0x0e<<2))
#define MIPI_MPHY0_TXHIB8TIME_CAP   (LLI_REG_BASE + (0x0f<<2))
#define MIPI_MPHY0_TXMODE           (LLI_REG_BASE + (0x21<<2))
#define MIPI_MPHY0_TXHSRATE_SERIES  (LLI_REG_BASE + (0x22<<2))
#define MIPI_MPHY0_TXHSGEAR         (LLI_REG_BASE + (0x23<<2))
#define MIPI_MPHY0_TXPWMGEAR        (LLI_REG_BASE + (0x24<<2))
#define MIPI_MPHY0_TXAMPLITUDE      (LLI_REG_BASE + (0x25<<2))
#define MIPI_MPHY0_TXHSSLEWRATE     (LLI_REG_BASE + (0x26<<2))
#define MIPI_MPHY0_TXSYNCSOURCE     (LLI_REG_BASE + (0x27<<2))
#define MIPI_MPHY0_TXHSSYNC_LENGTH  (LLI_REG_BASE + (0x28<<2))
#define MIPI_MPHY0_TXHSPREPLENGTH   (LLI_REG_BASE + (0x29<<2))
#define MIPI_MPHY0_TXLSPREPLENGTH   (LLI_REG_BASE + (0x2A<<2))
#define MIPI_MPHY0_TXHIBERN8CTRL    (LLI_REG_BASE + (0x2B<<2))
#define MIPI_MPHY0_TXLCCENABLE      (LLI_REG_BASE + (0x2C<<2))
#define MIPI_MPHY0_TXPWMCLOSEXT     (LLI_REG_BASE + (0x2D<<2))
#define MIPI_MPHY0_TXBYPASS8B10B    (LLI_REG_BASE + (0x2E<<2))
#define MIPI_MPHY0_TXPOLARITY       (LLI_REG_BASE + (0x2F<<2))
#define MIPI_MPHY0_TXHSUNTERM       (LLI_REG_BASE + (0x30<<2))
#define MIPI_MPHY0_TXLSTERM         (LLI_REG_BASE + (0x31<<2))
#define MIPI_MPHY0_TXLCCSEQUENCE    (LLI_REG_BASE + (0x32<<2))
#define MIPI_MPHY0_TXMINACTIVATTIME (LLI_REG_BASE + (0x33<<2))
#define MIPI_MPHY0_TXPWMG6G7SYNCLENGTH (LLI_REG_BASE + (0x34<<2))
#define MIPI_MPHY0_TXFSMSTATE       (LLI_REG_BASE + (0x41<<2))

/* OMC Attributes are omitted. */

#define MIPI_MPHY0_RXHSMODE_CAP     (LLI_REG_BASE + (0x81<<2))
#define MIPI_MPHY0_RXHSGEAR_CAP     (LLI_REG_BASE + (0x82<<2))
#define MIPI_MPHY0_RXPWMG0_CAP      (LLI_REG_BASE + (0x83<<2))
#define MIPI_MPHY0_RXPWMGEAR_CAP    (LLI_REG_BASE + (0x84<<2))
#define MIPI_MPHY0_RXHSUNTERM_CAP   (LLI_REG_BASE + (0x85<<2))
#define MIPI_MPHY0_RXLSTERM_CAP     (LLI_REG_BASE + (0x86<<2))
#define MIPI_MPHY0_RXMINSLEEP_CAP   (LLI_REG_BASE + (0x87<<2))
#define MIPI_MPHY0_RXMINSTALL_CAP   (LLI_REG_BASE + (0x88<<2))
#define MIPI_MPHY0_RXMINSAVECNF_CAP (LLI_REG_BASE + (0x89<<2))
#define MIPI_MPHY0_RXCLKSHARED_CAP  (LLI_REG_BASE + (0x8A<<2))
#define MIPI_MPHY0_RXHSG1sync_len_CAP   (LLI_REG_BASE + (0x8B<<2))
#define MIPI_MPHY0_RXHSG1PREPLEN_CAP    (LLI_REG_BASE + (0x8C<<2))
#define MIPI_MPHY0_RXLSPREPLEN_CAP  (LLI_REG_BASE + (0x8D<<2))
#define MIPI_MPHY0_RXPWMCLSLEN_CAP  (LLI_REG_BASE + (0x8E<<2))
#define MIPI_MPHY0_RXMINACTTIME_CAP (LLI_REG_BASE + (0x8F<<2))
#define MIPI_MPHY0_RXRELEASE_CAP    (LLI_REG_BASE + (0x90<<2))
#define MIPI_MPHY0_RXEDITION_CAP    (LLI_REG_BASE + (0x91<<2))
#define MIPI_MPHY0_RXHIB8TIME_CAP   (LLI_REG_BASE + (0x92<<2))
#define MIPI_MPHY0_RXLSG67sync_len_CAP  (LLI_REG_BASE + (0x93<<2))
#define MIPI_MPHY0_RXHSG2sync_len_CAP   (LLI_REG_BASE + (0x94<<2))
#define MIPI_MPHY0_RXHSG3sync_len_CAP   (LLI_REG_BASE + (0x95<<2))
#define MIPI_MPHY0_RXHSG2PREPLEN_CAP    (LLI_REG_BASE + (0x96<<2))
#define MIPI_MPHY0_RXHSG3PREPLEN_CAP    (LLI_REG_BASE + (0x97<<2))
#define MIPI_MPHY0_RXMODE               (LLI_REG_BASE + (0xA1<<2))
#define MIPI_MPHY0_RXHSRATE_SERIES  (LLI_REG_BASE + (0xA2<<2))
#define MIPI_MPHY0_RXHSGEAR         (LLI_REG_BASE + (0xA3<<2))
#define MIPI_MPHY0_RXPWMGEAR        (LLI_REG_BASE + (0xA4<<2))
#define MIPI_MPHY0_RXLSTERM         (LLI_REG_BASE + (0xA5<<2))
#define MIPI_MPHY0_RXHSUNTERM       (LLI_REG_BASE + (0xA6<<2))
#define MIPI_MPHY0_RXENTHIBE8       (LLI_REG_BASE + (0xA7<<2))
#define MIPI_MPHY0_RXBYPASS8B10B    (LLI_REG_BASE + (0xA8<<2))
#define MIPI_MPHY0_RXTERMFORCEEN    (LLI_REG_BASE + (0xA9<<2))
#define MIPI_MPHY0_RXFSMSTATE       (LLI_REG_BASE + (0xC1<<2))

/* OMC Attributes are omitted. */

/*
 * LLI PA Configuration registers
 * All registers dword size.
 * SVC available, PLU required for update(if shadow).
 */
#define MIPI_LLI_PA_TX_COUNT        (LLI_REG_BASE + 0x4000)
#define MIPI_LLI_PA_RX_COUNT        (LLI_REG_BASE + 0x4004)
#define MIPI_LLI_PA_MK0INS_ENABLE   (LLI_REG_BASE + 0x4100)
#define MIPI_LLI_PA_WTSTARTVAL      (LLI_REG_BASE + 0x4104)
#define MIPI_LLI_PA_PHITERRCOUNT    (LLI_REG_BASE + 0x4108)
#define MIPI_LLI_PA_PHITRCVCOUNTEN  (LLI_REG_BASE + 0x410C)
#define MIPI_LLI_PA_PHITERRCOUNTEN  (LLI_REG_BASE + 0x4110)
#define MIPI_LLI_PA_PHITRCVCOUNTLSB (LLI_REG_BASE + 0x4114)
#define MIPI_LLI_PA_PHITRCVCOUNTMSB (LLI_REG_BASE + 0x4118)
#define MIPI_LLI_PA_PHITCLRCOUNT    (LLI_REG_BASE + 0x411C)
#define MIPI_LLI_PA_ACTIVETXCOUNT   (LLI_REG_BASE + 0x4120)
#define PA_ACT_RX_CNT               (LLI_REG_BASE + 0x4124)
#define MIPI_LLI_PA_CONFIG_UPDATE   (LLI_REG_BASE + 0x4128)
#define MIPI_LLI_PA_MIN_SAVE_CONFIG (LLI_REG_BASE + 0x412C)
#define MIPI_LLI_PA_WORSTCASE_RTT   (LLI_REG_BASE + 0x4130)
#define MIPI_LLI_PA_DRV_TACTV_DUR   (LLI_REG_BASE + 0x4134)
#define PA_CSA_PA_STATUS            (LLI_REG_BASE + 0x4138)
#define MIPI_LLI_PA_CSA_PA_SET      (LLI_REG_BASE + 0x413C)
#define MIPI_LLI_PA_CSA_PA_CLEAR    (LLI_REG_BASE + 0x4140)
#define MIPI_LLI_PA_PHYTESTCONFIG   (LLI_REG_BASE + 0x4148)
#define MIPI_LLI_PA_PHYTESTRESULT0  (LLI_REG_BASE + 0x414C)
#define MIPI_LLI_PA_PHYTESTRESULT1  (LLI_REG_BASE + 0x4150)
#define MIPI_LLI_PA_PHYTESTRESULT2  (LLI_REG_BASE + 0x4154)
#define MIPI_LLI_PA_PHYTESTRESULT3  (LLI_REG_BASE + 0x4158)
#define MIPI_LLI_PA_PHYTESTRESULT4  (LLI_REG_BASE + 0x415C)
#define MIPI_LLI_PA_PHYTESTRESULT5  (LLI_REG_BASE + 0x4160)
#define MIPI_LLI_PA_PHYTESTRESULT6  (LLI_REG_BASE + 0x4164)
#define MIPI_LLI_PA_PHYTESTRESULT7  (LLI_REG_BASE + 0x4168)
#define MIPI_LLI_PA_PHYTESTRESULT8  (LLI_REG_BASE + 0x416C)
#define MIPI_LLI_PA_PHYTESTRESULT9  (LLI_REG_BASE + 0x4170)
#define MIPI_LLI_PA_PHYTESTRESULT10 (LLI_REG_BASE + 0x4174)
#define MIPI_LLI_PA_PHYTESTRESULT11 (LLI_REG_BASE + 0x4178)



/*
 * User PA Configuration registers
 * All registers dword size.
 * SVC available, but not use it.
 */
#define MIPI_USER_PA_AGPRM          (LLI_REG_BASE + 0x4400)
#define MIPI_USER_PA_NACKRTTMSR     (LLI_REG_BASE + 0x4404)
#define NACK_RTTMSR_EN              (1 << 0)
#define NACK_RTTMSR_DONE            (1 << 1)

#define MIPI_USER_PA_NACKRTTMSRRSLT (LLI_REG_BASE + 0x4408)
#define MIPI_USER_PA_CNTCTL         (LLI_REG_BASE + 0x4500)
#define MIPI_USER_PA_RBTC           (LLI_REG_BASE + 0x4504)
#define MIPI_USER_PA_NACKT          (LLI_REG_BASE + 0x4508)
#define MIPI_USER_PA_DSKWTC         (LLI_REG_BASE + 0x450C)
#define MIPI_USER_PA_PATXSV         (LLI_REG_BASE + 0x4520)
#define MIPI_USER_PA_MPHYRB         (LLI_REG_BASE + 0x45F0)

/*
 * User PA Configuration for Debug
 * ToDo: These should not be disclosed to users, it is evaluation purpose only.
 *
 */

#define MIPI_USER_PA_DBG_CNTCTL             (LLI_REG_BASE + 0x4600)
#define MIPI_USER_PA_DBG_ONEUSCNT           (LLI_REG_BASE + 0x4604)
#define MIPI_USER_PA_DBG_PAMINSVCFGORVAL    (LLI_REG_BASE + 0x4608)
#define MIPI_USER_PA_DBG_WORSTRTTORVAL      (LLI_REG_BASE + 0x460C)
#define MIPI_USER_PA_DBG_CNTL1              (MIPI_LLI_REG_BASE + 0x4620)
 /* (CD) ToDo, address 4620 correct??*/
#define MIPI_USER_PA_DBG_CNTL2      (LLI_REG_BASE + 0x4624)
#define MIPI_USER_PA_DBG_STATUS1    (LLI_REG_BASE + 0x4640)
#define MIPI_USER_PA_DBG_STATUS2    (LLI_REG_BASE + 0x4644)
#define MIPI_USER_PA_DBG_STATUS3    (LLI_REG_BASE + 0x4648)
#define MIPI_USER_PA_DBG_STATUS4    (LLI_REG_BASE + 0x464C)
#define MIPI_USER_PA_DBG_STATUS5    (LLI_REG_BASE + 0x4650)


/*
 * LLI Control registers
 * All registers dword size.
 * SVC available, but not use it.
 */
#define CTRL_LLINITPRSNT    (LLI_REG_BASE + 0x4800)
#define CTRL_LLTRGTPRSNT    (LLI_REG_BASE + 0x4804)
#define CTRL_BEINITPRSNT    (LLI_REG_BASE + 0x4808)
#define CTRL_BETRGTPRSNT    (LLI_REG_BASE + 0x480C)
#define CTRL_SVCTRGTPRSNT   (LLI_REG_BASE + 0x4810)
#define CTRL_LLTCDISABLE    (LLI_REG_BASE + 0x4900)
#define CTRL_BETCDISABLE    (LLI_REG_BASE + 0x4904)
#define CTRL_CSASYSTEMSTAT  (LLI_REG_BASE + 0x4908)
#define CTRL_CSASYSTEMSET   (LLI_REG_BASE + 0x490C)
#define CTRL_CSASYSTEMCLR   (LLI_REG_BASE + 0x4910)
#define CTRL_TLADDRMODE     (LLI_REG_BASE + 0x4914)

/*
 * User Control registers
 * All registers dword size.
 * SVC available, but not use it.
 */
#define MIPI_USER_CTRL_CLDRST       (LLI_REG_BASE + 0x5000)
#define MIPI_USER_CTRL_CLDRSTAUTO   (LLI_REG_BASE + 0x5004)
#define MIPI_USER_CTRL_ROE          (LLI_REG_BASE + 0x5008)
#define MIPI_USER_CTRL_ROEAUTO      (LLI_REG_BASE + 0x500C)
#define MIPI_USER_CTRL_INTST        (LLI_REG_BASE + 0x5020)
#define MIPI_USER_CTRL_INTUM        (LLI_REG_BASE + 0x5024)
#define MIPI_USER_CTRL_INTCLR       (LLI_REG_BASE + 0x5028)
#define MIPI_USER_CTRL_AXICFG       (LLI_REG_BASE + 0x5040)
#define MIPI_USER_CTRL_TRANARB      (LLI_REG_BASE + 0x5044)
#define MIPI_USER_CTRL_AXIAPBCTL    (LLI_REG_BASE + 0x5048)
#define MIPI_USER_CTRL_RSTR         (LLI_REG_BASE + 0x504C)
#define MIPI_USER_CTRL_MADREMAP1    (LLI_REG_BASE + 0x5050)
#define MIPI_USER_CTRL_MADREMAP2    (LLI_REG_BASE + 0x5054)
#define MIPI_USER_CTRL_MADREMAP3    (LLI_REG_BASE + 0x5058)
#define MIPI_USER_CTRL_MADREMAP4    (LLI_REG_BASE + 0x505C)
#define MIPI_USER_CTRL_MADREMAP5    (LLI_REG_BASE + 0x5060)
#define MIPI_USER_CTRL_MADREMAP6    (LLI_REG_BASE + 0x5064)
#define MIPI_USER_CTRL_MADREMAP7    (LLI_REG_BASE + 0x5068)
#define MIPI_USER_CTRL_MADREMAP8    (LLI_REG_BASE + 0x506C)
#define MIPI_USER_CTRL_MADREMAPUM1  (LLI_REG_BASE + 0x5070)
#define MIPI_USER_CTRL_MADREMAPUM2  (LLI_REG_BASE + 0x5074)
#define MIPI_USER_CTRL_MADREMAPUM3  (LLI_REG_BASE + 0x5078)
#define MIPI_USER_CTRL_MADREMAPUM4  (LLI_REG_BASE + 0x507C)
#define MIPI_USER_CTRL_MADREMAPUM5  (LLI_REG_BASE + 0x5080)
#define MIPI_USER_CTRL_MADREMAPUM6  (LLI_REG_BASE + 0x5084)
#define MIPI_USER_CTRL_MADREMAPUM7  (LLI_REG_BASE + 0x5088)
#define MIPI_USER_CTRL_MADREMAPUM8  (LLI_REG_BASE + 0x508C)
#define MIPI_USER_CTRL_MADREMAPFLT1 (LLI_REG_BASE + 0x5090)
#define MIPI_USER_CTRL_MADREMAPFLT2 (LLI_REG_BASE + 0x5094)
#define MIPI_USER_CTRL_MADREMAPFLT3 (LLI_REG_BASE + 0x5098)
#define MIPI_USER_CTRL_MADREMAPFLT4 (LLI_REG_BASE + 0x509C)
#define MIPI_USER_CTRL_MADREMAPFLT5 (LLI_REG_BASE + 0x50A0)
#define MIPI_USER_CTRL_MADREMAPFLT6 (LLI_REG_BASE + 0x50A4)
#define MIPI_USER_CTRL_MADREMAPFLT7 (LLI_REG_BASE + 0x50A8)
#define MIPI_USER_CTRL_MADREMAPFLT8 (LLI_REG_BASE + 0x50AC)
#define MIPI_USER_CTRL_SADREMAP1    (LLI_REG_BASE + 0x50B0)
#define MIPI_USER_CTRL_SADREMAP2    (LLI_REG_BASE + 0x50B4)
#define MIPI_USER_CTRL_SADREMAP3    (LLI_REG_BASE + 0x50B8)
#define MIPI_USER_CTRL_SADREMAP4    (LLI_REG_BASE + 0x50BC)
#define MIPI_USER_CTRL_SADREMAP5    (LLI_REG_BASE + 0x50C0)
#define MIPI_USER_CTRL_SADREMAP6    (LLI_REG_BASE + 0x50C4)
#define MIPI_USER_CTRL_SADREMAP7    (LLI_REG_BASE + 0x50C8)
#define MIPI_USER_CTRL_SADREMAP8    (LLI_REG_BASE + 0x50CC)
#define MIPI_USER_CTRL_SADREMAPUM1  (LLI_REG_BASE + 0x50D0)
#define MIPI_USER_CTRL_SADREMAPUM2  (LLI_REG_BASE + 0x50D4)
#define MIPI_USER_CTRL_SADREMAPUM3  (LLI_REG_BASE + 0x50D8)
#define MIPI_USER_CTRL_SADREMAPUM4  (LLI_REG_BASE + 0x50DC)
#define MIPI_USER_CTRL_SADREMAPUM5  (LLI_REG_BASE + 0x50E0)
#define MIPI_USER_CTRL_SADREMAPUM6  (LLI_REG_BASE + 0x50E4)
#define MIPI_USER_CTRL_SADREMAPUM7  (LLI_REG_BASE + 0x50E8)
#define MIPI_USER_CTRL_SADREMAPUM8  (LLI_REG_BASE + 0x50EC)
#define MIPI_USER_CTRL_SADREMAPFLT1 (LLI_REG_BASE + 0x50F0)
#define MIPI_USER_CTRL_SADREMAPFLT2 (LLI_REG_BASE + 0x50F4)
#define MIPI_USER_CTRL_SADREMAPFLT3 (LLI_REG_BASE + 0x50F8)
#define MIPI_USER_CTRL_SADREMAPFLT4 (LLI_REG_BASE + 0x50FC)
#define MIPI_USER_CTRL_SADREMAPFLT5 (LLI_REG_BASE + 0x5100)
#define MIPI_USER_CTRL_SADREMAPFLT6 (LLI_REG_BASE + 0x5104)
#define MIPI_USER_CTRL_SADREMAPFLT7 (LLI_REG_BASE + 0x5108)
#define MIPI_USER_CTRL_SADREMAPFLT8 (LLI_REG_BASE + 0x510C)
#define MIPI_USER_CTRL_SADPSTWUNM1  (LLI_REG_BASE + 0x5110)
#define MIPI_USER_CTRL_SADPSTWUNM2  (LLI_REG_BASE + 0x5114)
#define MIPI_USER_CTRL_SADPSTWUNM3  (LLI_REG_BASE + 0x5118)
#define MIPI_USER_CTRL_SADPSTWUNM4  (LLI_REG_BASE + 0x511C)
#define MIPI_USER_CTRL_SADPSTWUNM5  (LLI_REG_BASE + 0x5120)
#define MIPI_USER_CTRL_SADPSTWUNM6  (LLI_REG_BASE + 0x5124)
#define MIPI_USER_CTRL_SADPSTWUNM7  (LLI_REG_BASE + 0x5128)
#define MIPI_USER_CTRL_SADPSTWUNM8  (LLI_REG_BASE + 0x512C)
#define MIPI_USER_CTRL_SADPSTWFLT1  (LLI_REG_BASE + 0x5130)
#define MIPI_USER_CTRL_SADPSTWFLT2  (LLI_REG_BASE + 0x5134)
#define MIPI_USER_CTRL_SADPSTWFLT3  (LLI_REG_BASE + 0x5138)
#define MIPI_USER_CTRL_SADPSTWFLT4  (LLI_REG_BASE + 0x513C)
#define MIPI_USER_CTRL_SADPSTWFLT5  (LLI_REG_BASE + 0x5140)
#define MIPI_USER_CTRL_SADPSTWFLT6  (LLI_REG_BASE + 0x5144)
#define MIPI_USER_CTRL_SADPSTWFLT7  (LLI_REG_BASE + 0x5148)
#define MIPI_USER_CTRL_SADPSTWFLT8  (LLI_REG_BASE + 0x514C)
#define MIPI_USER_CTRL_MAWUSRSW7_0  (LLI_REG_BASE + 0x5150)
#define MIPI_USER_CTRL_MAWUSRSW8    (LLI_REG_BASE + 0x5154)
#define MIPI_USER_CTRL_MARUSRSW7_0  (LLI_REG_BASE + 0x5158)
#define MIPI_USER_CTRL_MARUSRSW8    (LLI_REG_BASE + 0x515C)
#define MIPI_USER_CTRL_SAWUSRSW7_0  (LLI_REG_BASE + 0x5160)
#define MIPI_USER_CTRL_SAWUSRSW8    (LLI_REG_BASE + 0x5164)
#define MIPI_USER_CTRL_SARUSRSW7_0  (LLI_REG_BASE + 0x5168)
#define MIPI_USER_CTRL_SARUSRSW8    (LLI_REG_BASE + 0x516C)
#define MIPI_USER_CTRL_MAWUSREN     (LLI_REG_BASE + 0x5170)
#define MIPI_USER_CTRL_MARUSREN     (LLI_REG_BASE + 0x5174)
#define MIPI_USER_CTRL_SAWUSREN     (LLI_REG_BASE + 0x5178)
#define MIPI_USER_CTRL_SARUSREN     (LLI_REG_BASE + 0x517C)
#define MIPI_USER_CTRL_LSSTSSW5_0   (LLI_REG_BASE + 0x5200)
#define MIPI_USER_CTRL_LSSTSSW11_6  (LLI_REG_BASE + 0x5204)
#define MIPI_USER_CTRL_LSSTSSW17_12 (LLI_REG_BASE + 0x5208)
#define MIPI_USER_CTRL_LSSTSSW23_18 (LLI_REG_BASE + 0x520C)
#define MIPI_USER_CTRL_LSSTSSW29_24 (LLI_REG_BASE + 0x5210)
#define MIPI_USER_CTRL_LSSTSSW31_30 (LLI_REG_BASE + 0x5214)
#define MIPI_USER_CTRL_LSSETSW5_0   (LLI_REG_BASE + 0x5218)
#define MIPI_USER_CTRL_LSSETSW11_6  (LLI_REG_BASE + 0x521C)
#define MIPI_USER_CTRL_LSSETSW17_12 (LLI_REG_BASE + 0x5220)
#define MIPI_USER_CTRL_LSSETSW23_18 (LLI_REG_BASE + 0x5224)
#define MIPI_USER_CTRL_LSSETSW29_24 (LLI_REG_BASE + 0x5228)
#define MIPI_USER_CTRL_LSSETSW31_30 (LLI_REG_BASE + 0x522C)
#define MIPI_USER_CTRL_LSSTSEN      (LLI_REG_BASE + 0x5300)
#define MIPI_USER_CTRL_LSSTSOR      (LLI_REG_BASE + 0x5340)
#define MIPI_USER_CTRL_LSSETMR      (LLI_REG_BASE + 0x5400)
#define MIPI_USER_CTRL_LSSETEN      (LLI_REG_BASE + 0x5440)
#define MIPI_USER_CTRL_LSSETUM      (LLI_REG_BASE + 0x5480)


/*
 *  User Control for Debug
 * ToDo: These should not be disclosed to users,
 * it is evaluation purpose only.
 *
 */
#define MIPI_USER_CTRL_DBG_TLDLDBGCNTL1   (LLI_REG_BASE + 0x5800)
#define MIPI_USER_CTRL_DBG_TLDLDBGSTATUS1 (LLI_REG_BASE + 0x5840)
#define MIPI_USER_CTRL_DBG_TLDLDBGSTATUS2 (LLI_REG_BASE + 0x5844)


/*
 * LLI Signaling Configuration registers
 * All registers dword size.
 * SVC available, but not use it.
 *
 */
#define MIPI_LLI_SIGNAL_SIGREGNUM   (LLI_REG_BASE + 0x6000)
#define MIPI_LLI_SIGNAL_SIGNALSTATE (LLI_REG_BASE + 0x6004)
#define MIPI_LLI_SIGNAL_SIGNALSET   (LLI_REG_BASE + 0x6008)
#define MIPI_LLI_SIGNAL_SIGNALCLEAR (LLI_REG_BASE + 0x600C)


/*
 * User Signaling Configuration registers
 * SVC available, but not use it.
 */
#define MIPI_USER_SIGNAL_XXX (LLI_REG_BASE + 0x00)

/*
 * LLI Debug Signaling Configuration registers
 * SVC available, but not use it.
 */
#define MIPI_LLI_DEBUG_SIGNAL_XXX (MIPI_LLI_REG_BASE + 0x00)

/*
 * User Debug Signaling Configuration registers
 * SVC available, but not use it.
 */
#define MIPI_USER_DEBUG_SIGNAL_XXX (LLI_REG_BASE + 0x00)

/* MIPI-LLI 0 Memory , MIPI-LLI 1 Memory */
#define LLI0_MEM_ADDR 0x4000000000 /*0x4F_FFFF_FFFF*/
#define LLI1_MEM_ADDR 0x5000000000 /*0x5F_FFFF_FFFF*/
#define LLI_MEM_OFF (LLI0_MEM_ADDR - LLI1_MEM_ADDR)

#endif /* MIPILLI_MEM_H_ */
